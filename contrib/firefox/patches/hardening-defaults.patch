commit 5ca768a5da280bc7af79c573a6e07015ae4608a5
Author: q66 <q66@chimera-linux.org>
Date:   Wed Aug 2 00:05:16 2023 +0200

    remove hardening flags that are a part of our toolchain
    
    This is so we can control it better.

diff --git a/build/moz.configure/toolchain.configure b/build/moz.configure/toolchain.configure
index 6a9933f..ac1d159 100644
--- a/build/moz.configure/toolchain.configure
+++ b/build/moz.configure/toolchain.configure
@@ -2395,29 +2395,6 @@ def security_hardening_cflags(
     # ----------------------------------------------------------
     # If hardening is explicitly enabled, or not explicitly disabled
     if hardening_flag.origin == "default" or hardening_flag:
-        # FORTIFY_SOURCE ------------------------------------
-        # Require optimization for FORTIFY_SOURCE. See Bug 1417452
-        # Also, undefine it before defining it just in case a distro adds it, see Bug 1418398
-        if compiler_is_gccish and optimize and not asan:
-            flags.append("-U_FORTIFY_SOURCE")
-            flags.append("-D_FORTIFY_SOURCE=2")
-
-        # fstack-protector ------------------------------------
-        # Enable only if hardening is not disabled and ASAN is
-        # not on as ASAN will catch the crashes for us
-        if compiler_is_gccish and not asan:
-            flags.append("-fstack-protector-strong")
-            ldflags.append("-fstack-protector-strong")
-
-            if (
-                c_compiler.type == "clang"
-                and c_compiler.version >= "11.0.1"
-                and target.os not in ("WINNT", "OSX")
-                and target.cpu in ("x86", "x86_64", "ppc64", "s390x")
-            ):
-                flags.append("-fstack-clash-protection")
-                ldflags.append("-fstack-clash-protection")
-
         # ftrivial-auto-var-init ------------------------------
         # Initialize local variables with a 0xAA pattern in clang builds.
         # Linux32 fails some xpcshell tests with -ftrivial-auto-var-init
