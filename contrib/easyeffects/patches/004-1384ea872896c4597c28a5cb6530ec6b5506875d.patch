From 1384ea872896c4597c28a5cb6530ec6b5506875d Mon Sep 17 00:00:00 2001
From: wwmm <wellingtonwallace@gmail.com>
Date: Thu, 24 Aug 2023 12:13:36 -0300
Subject: [PATCH] improving compatibility with libc++

---
 include/util.hpp             |  45 +++++++--
 meson_options.txt            |   7 ++
 po/af.po                     |  94 ++++++++-----------
 po/bg.po                     |  94 ++++++++-----------
 po/ca.po                     |  94 ++++++++-----------
 po/cs.po                     | 173 +++++++++++++++++++----------------
 po/da.po                     | 168 +++++++++++++++++++---------------
 po/de.po                     | 171 ++++++++++++++++++----------------
 po/easyeffects.pot           |  94 ++++++++-----------
 po/es.po                     | 168 +++++++++++++++++++---------------
 po/es_CO.po                  | 168 +++++++++++++++++++---------------
 po/es_MX.po                  | 168 +++++++++++++++++++---------------
 po/es_VE.po                  | 168 +++++++++++++++++++---------------
 po/eu.po                     | 131 ++++++++++++++------------
 po/fr_FR.po                  | 173 +++++++++++++++++++----------------
 po/gl.po                     | 173 +++++++++++++++++++----------------
 po/hr.po                     | 167 ++++++++++++++++++---------------
 po/id_ID.po                  | 170 ++++++++++++++++++----------------
 po/it_IT.po                  | 168 +++++++++++++++++++---------------
 po/ja.po                     | 168 +++++++++++++++++++---------------
 po/ka.po                     | 118 ++++++++++--------------
 po/km.po                     |  94 ++++++++-----------
 po/ko.po                     | 106 ++++++++++-----------
 po/nb_NO.po                  | 150 +++++++++++++++++-------------
 po/news/af.po                |   2 +-
 po/news/cs.po                |   2 +-
 po/news/da.po                |   2 +-
 po/news/de.po                |   2 +-
 po/news/easyeffects-news.pot |   2 +-
 po/news/es.po                |   2 +-
 po/news/es_CO.po             |   2 +-
 po/news/es_MX.po             |   2 +-
 po/news/es_VE.po             |   2 +-
 po/news/fr_FR.po             |   2 +-
 po/news/gl.po                |   2 +-
 po/news/hr.po                |   2 +-
 po/news/id_ID.po             |   2 +-
 po/news/it_IT.po             |   2 +-
 po/news/ja.po                |   2 +-
 po/news/km.po                |   2 +-
 po/news/ko.po                |   2 +-
 po/news/nb_NO.po             |   2 +-
 po/news/nl.po                |   2 +-
 po/news/pl.po                |   2 +-
 po/news/pt_BR.po             |   2 +-
 po/news/ro.po                |   2 +-
 po/news/ru.po                |   2 +-
 po/news/sk.po                |   2 +-
 po/news/sv.po                |   2 +-
 po/news/th.po                |   2 +-
 po/news/tr.po                |   2 +-
 po/news/zh_CN.po             |   2 +-
 po/nl.po                     | 171 ++++++++++++++++++----------------
 po/nn.po                     | 155 ++++++++++++++++++-------------
 po/pl.po                     | 167 ++++++++++++++++++---------------
 po/pt_BR.po                  | 173 +++++++++++++++++++----------------
 po/ro.po                     | 168 +++++++++++++++++++---------------
 po/ru.po                     | 171 ++++++++++++++++++----------------
 po/sk.po                     | 173 +++++++++++++++++++----------------
 po/sv.po                     | 125 +++++++++++--------------
 po/th.po                     |  94 ++++++++-----------
 po/tr.po                     | 168 +++++++++++++++++++---------------
 po/uk.po                     |  94 ++++++++-----------
 po/zh_CN.po                  | 171 ++++++++++++++++++----------------
 src/meson.build              |   5 +
 src/util.cpp                 |   4 -
 66 files changed, 2683 insertions(+), 2442 deletions(-)

diff --git a/include/util.hpp b/include/util.hpp
index f149cf6a2..a627cf255 100644
--- a/include/util.hpp
+++ b/include/util.hpp
@@ -24,23 +24,24 @@
 #include <glib-object.h>
 #include <glib.h>
 #include <charconv>
+#include <clocale>
 #include <cmath>
+#include <cstdlib>
 #include <filesystem>
 #include <functional>
 #include <iostream>
 #include <limits>
 #include <ranges>
+#include <regex>
 #include <source_location>
+#include <sstream>
 #include <string>
 #include <thread>
+#include <type_traits>
+#include <utility>
 #include <vector>
 
-#ifdef __clang__
-#include <experimental/source_location>
-#endif
-
 namespace util {
-
 // Minimum dB level reported here has to be used in gsettings and spinbuttons
 // as minimal values for controls that replicates the -infinity state (linear 0).
 constexpr float minimum_db_level = -100.0F;
@@ -48,11 +49,7 @@ constexpr double minimum_db_d_level = -100.0;
 constexpr float minimum_linear_level = 0.00001F;
 constexpr double minimum_linear_d_level = 0.00001;
 
-#ifdef __clang__
-using source_location = std::experimental::source_location;
-#else
 using source_location = std::source_location;
-#endif
 
 void debug(const std::string& s, source_location location = source_location::current());
 void error(const std::string& s, source_location location = source_location::current());
@@ -134,9 +131,39 @@ auto str_to_num(const std::string& str, T& num) -> bool {
     return false;
   }
 
+#ifndef ENABLE_LIBCPP_WORKAROUNDS
+
   const auto result = std::from_chars(str.data() + first_char, str.data() + str.size(), num);
 
   return (result.ec == std::errc());
+
+#else
+
+  if constexpr (std::is_floating_point_v<T>) {
+    char* endp = nullptr;
+
+    /* we're asking for C locale which is preallocated, so no alloc here */
+
+    auto loc = newlocale(LC_ALL_MASK, "C", nullptr);
+
+    if constexpr (std::is_same_v<T, float>) {
+      num = strtof_l(str.data() + first_char, &endp, loc);
+    } else {
+      num = strtod_l(str.data() + first_char, &endp, loc);
+    }
+
+    /* we gotta "free" it anyway */
+
+    freelocale(loc);
+
+    return (endp && !*endp && (endp != (str.data() + first_char)));
+  } else {
+    const auto result = std::from_chars(str.data() + first_char, str.data() + str.size(), num);
+
+    return (result.ec == std::errc());
+  }
+
+#endif
 }
 
 template <typename T>
diff --git a/meson_options.txt b/meson_options.txt
index 73dfa0604..8642d05fc 100644
--- a/meson_options.txt
+++ b/meson_options.txt
@@ -25,3 +25,10 @@ option(
   type: 'boolean',
   value: true
 )
+
+option(
+  'enable-libcpp-workarounds',
+  description: 'Whether to enable code paths need for compilation on libc++.',
+  type: 'boolean',
+  value: false
+)
diff --git a/src/meson.build b/src/meson.build
index 479c7ad2f..afc37c056 100644
--- a/src/meson.build
+++ b/src/meson.build
@@ -146,6 +146,11 @@ if get_option('enable-libportal')
   status += 'Using libportal to handle autostart files.'
 endif
 
+if get_option('enable-libcpp-workarounds')
+  add_project_arguments('-DENABLE_LIBCPP_WORKAROUNDS=1', language : 'cpp')
+  status += 'Using libc++ workarounds.'
+endif
+
 easyeffects_deps = [
         dependency('libpipewire-0.3', version: '>=0.3.58', include_type: 'system'),
         dependency('glib-2.0', version: '>=2.56', include_type: 'system'),
diff --git a/src/util.cpp b/src/util.cpp
index cc664e9a8..31819a75a 100644
--- a/src/util.cpp
+++ b/src/util.cpp
@@ -19,10 +19,6 @@
 
 #include "util.hpp"
 
-#include <regex>
-#include <sstream>
-#include <utility>
-
 namespace util {
 
 auto prepare_debug_message(const std::string& message, source_location location) -> std::string {
