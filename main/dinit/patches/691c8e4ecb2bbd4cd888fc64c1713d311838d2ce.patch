From 691c8e4ecb2bbd4cd888fc64c1713d311838d2ce Mon Sep 17 00:00:00 2001
From: Davin McCall <davmac@davmac.org>
Date: Sat, 6 Aug 2022 09:10:31 +1000
Subject: [PATCH] Compilation fixes for libc++/FreeBSD

---
 src/includes/dinit-util.h | 2 +-
 src/run-child-proc.cc     | 6 ++++--
 2 files changed, 5 insertions(+), 3 deletions(-)

diff --git a/src/includes/dinit-util.h b/src/includes/dinit-util.h
index aaa4bf7..9b92d24 100644
--- a/src/includes/dinit-util.h
+++ b/src/includes/dinit-util.h
@@ -272,7 +272,7 @@ class dinit_unordered_set {
         size_t bucket_num;
 
     public:
-        iterator() noexcept : buckets(nullptr), list_it({}), bucket_num(-1) { }
+        iterator() noexcept : buckets(nullptr), list_it(), bucket_num(-1) { }
         iterator(bucket_vec *buckets_p, list_iterator_t lit, size_t bucket_p) noexcept
             : buckets(buckets_p), list_it(lit), bucket_num(bucket_p) { }
         iterator(const iterator &) noexcept = default;
diff --git a/src/run-child-proc.cc b/src/run-child-proc.cc
index 92e59f9..03af5bb 100644
--- a/src/run-child-proc.cc
+++ b/src/run-child-proc.cc
@@ -314,7 +314,7 @@ void base_process_service::run_child_proc(run_proc_params params) noexcept
             num_chars = sprintf(pidbuf, "%lu\n", (unsigned long)getpid());
         }
         else {
-            static_assert(sizeof(pid_t) <= sizeof(unsigned long long));
+            static_assert(sizeof(pid_t) <= sizeof(unsigned long long), "pid_t is too big");
             num_chars = sprintf(pidbuf, "%llu\n", (unsigned long long)getpid());
         }
 
@@ -333,7 +333,9 @@ void base_process_service::run_child_proc(run_proc_params params) noexcept
     sigprocmask(SIG_SETMASK, &sigwait_set, nullptr);
 
     err.stage = exec_stage::DO_EXEC;
-    execvpe(args[0], const_cast<char **>(args), const_cast<char **>(proc_env_map.env_list.data()));
+    // (on linux we could use execvpe, but it's not POSIX and not in eg FreeBSD).
+    environ = const_cast<char **>(proc_env_map.env_list.data());
+    execvp(args[0], const_cast<char **>(args));
 
     // If we got here, the exec failed:
     failure_out:
