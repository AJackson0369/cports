commit 284a29697bcf30a9d133fd733f2e2944c0dcf1a9
Author: Daniel Kolesa <daniel@octaforge.org>
Date:   Mon Jan 24 22:52:13 2022 +0100

    port to gweather4

diff --git a/CMakeLists.txt b/CMakeLists.txt
index c764c76..97a2696 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -118,7 +118,7 @@ set(sqlite_minimum_version 3.7.17)
 
 # Optional Packages
 set(goa_minimum_version 3.8)
-set(gweather_minimum_version 3.90)
+set(gweather_minimum_version 3.91.0)
 set(libaccounts_glib_minimum_version 1.4)
 set(libsignon_glib_minimum_version 1.8)
 set(json_glib_minimum_version 1.0.4)
diff --git a/src/calendar/backends/weather/e-cal-backend-weather.c b/src/calendar/backends/weather/e-cal-backend-weather.c
index 72faccd..abab67f 100644
--- a/src/calendar/backends/weather/e-cal-backend-weather.c
+++ b/src/calendar/backends/weather/e-cal-backend-weather.c
@@ -464,7 +464,7 @@ create_weather (ECalBackendWeather *cbw,
 	time_t			   update_time;
 	ICalTimezone		  *update_zone = NULL;
 	const GWeatherLocation    *location;
-	const GWeatherTimezone    *w_timezone;
+	GTimeZone                 *w_timezone;
 	gdouble tmin = 0.0, tmax = 0.0, temp = 0.0;
 
 	g_return_val_if_fail (E_IS_CAL_BACKEND_WEATHER (cbw), NULL);
@@ -484,7 +484,7 @@ create_weather (ECalBackendWeather *cbw,
 	/* use timezone of the location to determine date for which this is set */
 	location = gweather_info_get_location (report);
 	if (location && (w_timezone = gweather_location_get_timezone ((GWeatherLocation *) location)))
-		update_zone = i_cal_timezone_get_builtin_timezone (gweather_timezone_get_tzid ((GWeatherTimezone *) w_timezone));
+		update_zone = i_cal_timezone_get_builtin_timezone (g_time_zone_get_identifier (w_timezone));
 
 	if (!update_zone)
 		update_zone = i_cal_timezone_get_utc_timezone ();
diff --git a/src/calendar/backends/weather/e-weather-source.c b/src/calendar/backends/weather/e-weather-source.c
index 6cb6454..a847166 100644
--- a/src/calendar/backends/weather/e-weather-source.c
+++ b/src/calendar/backends/weather/e-weather-source.c
@@ -39,8 +39,7 @@ weather_source_dispose (GObject *object)
 	EWeatherSourcePrivate *priv;
 
 	priv = E_WEATHER_SOURCE (object)->priv;
-	g_clear_pointer (&priv->location, gweather_location_unref);
-
+	g_clear_object (&priv->location);
 	g_clear_object (&priv->info);
 
 	/* Chain up to parent's dispose() method. */
@@ -80,7 +79,7 @@ weather_source_find_location_by_coords (GWeatherLocation *start,
 		gweather_location_get_coords (location, &lat, &lon);
 
 		if (lat == latitude && lon == longitude) {
-			gweather_location_ref (location);
+			g_object_ref (location);
 			return location;
 		}
 	}
@@ -90,7 +89,7 @@ weather_source_find_location_by_coords (GWeatherLocation *start,
 
 		result = weather_source_find_location_by_coords (child, latitude, longitude);
 		if (result) {
-			gweather_location_unref (child);
+			g_object_unref (child);
 			return result;
 		}
 	}
@@ -138,7 +137,7 @@ e_weather_source_new (const gchar *location)
 		}
 	}
 
-	gweather_location_unref (world);
+	g_object_unref (world);
 	g_strfreev (tokens);
 
 	if (glocation == NULL)
