From 468ac76d69cf982f8200e0b4b8049ce97aa12931 Mon Sep 17 00:00:00 2001
From: q66 <q66@chimera-linux.org>
Date: Sat, 1 Oct 2022 00:02:27 +0200
Subject: [PATCH] drop -latomic for riscv

---
 compiler/rustc_llvm/build.rs |  8 --------
 src/bootstrap/native.rs      | 12 ------------
 2 files changed, 20 deletions(-)

diff --git a/compiler/rustc_llvm/build.rs b/compiler/rustc_llvm/build.rs
index 62ef580..e4b30d8 100644
--- a/compiler/rustc_llvm/build.rs
+++ b/compiler/rustc_llvm/build.rs
@@ -334,14 +334,6 @@ fn main() {
         "stdc++"
     };
 
-    // RISC-V GCC erroneously requires libatomic for sub-word
-    // atomic operations. FreeBSD uses Clang as its system
-    // compiler and provides no libatomic in its base system so
-    // does not want this.
-    if !target.contains("freebsd") && target.starts_with("riscv") {
-        println!("cargo:rustc-link-lib=atomic");
-    }
-
     // C++ runtime library
     if !target.contains("msvc") {
         if let Some(s) = llvm_static_stdcpp {
diff --git a/src/bootstrap/native.rs b/src/bootstrap/native.rs
index 4d548db..20ab529 100644
--- a/src/bootstrap/native.rs
+++ b/src/bootstrap/native.rs
@@ -358,18 +358,6 @@ impl Step for Llvm {
             cfg.define("LLVM_LINK_LLVM_DYLIB", "ON");
         }
 
-        if target.starts_with("riscv") && !target.contains("freebsd") {
-            // RISC-V GCC erroneously requires linking against
-            // `libatomic` when using 1-byte and 2-byte C++
-            // atomics but the LLVM build system check cannot
-            // detect this. Therefore it is set manually here.
-            // FreeBSD uses Clang as its system compiler and
-            // provides no libatomic in its base system so does
-            // not want this.
-            ldflags.exe.push(" -latomic");
-            ldflags.shared.push(" -latomic");
-        }
-
         if target.contains("msvc") {
             cfg.define("LLVM_USE_CRT_DEBUG", "MT");
             cfg.define("LLVM_USE_CRT_RELEASE", "MT");
-- 
2.25.1

