From 416b2f4886229dfeea442d5a3276114d57fb92c2 Mon Sep 17 00:00:00 2001
From: Daniel Kolesa <daniel@octaforge.org>
Date: Fri, 25 Feb 2022 00:36:43 +0100
Subject: [PATCH 05/11] get rid of wrong linkage

There is no good way to compute the clang builtins library
path from inside the rust code, but there should be no harm
in just disabling nodefaultlibs for our platform.
---
 vendor/libc/src/unix/mod.rs | 7 +------
 1 file changed, 1 insertion(+), 6 deletions(-)

diff --git a/vendor/libc/src/unix/mod.rs b/vendor/libc/src/unix/mod.rs
index ecee44411..00f4b14a0 100644
--- a/vendor/libc/src/unix/mod.rs
+++ b/vendor/libc/src/unix/mod.rs
@@ -337,12 +337,7 @@ cfg_if! {
         #[link(name = "c", cfg(not(target_feature = "crt-static")))]
         extern {}
     } else if #[cfg(target_env = "musl")] {
-        #[cfg_attr(feature = "rustc-dep-of-std",
-                   link(name = "c", kind = "static", modifiers = "-bundle",
-                        cfg(target_feature = "crt-static")))]
-        #[cfg_attr(feature = "rustc-dep-of-std",
-                   link(name = "c", cfg(not(target_feature = "crt-static"))))]
-        extern {}
+        // we don't set -nodefaultlibs, so no need to link anything
     } else if #[cfg(target_os = "emscripten")] {
         #[link(name = "c")]
         extern {}
-- 
2.37.3

