From 5d1ae60c70325640bfcac2218187427a5166f590 Mon Sep 17 00:00:00 2001
From: Daniel Kolesa <daniel@octaforge.org>
Date: Tue, 8 Nov 2022 15:23:25 +0100
Subject: [PATCH 11/11] drop -latomic on risc and elsewhere

---
 compiler/rustc_llvm/build.rs | 15 ---------------
 src/bootstrap/native.rs      | 13 -------------
 2 files changed, 28 deletions(-)

diff --git a/compiler/rustc_llvm/build.rs b/compiler/rustc_llvm/build.rs
index 2bc3e6bd8..f075ec3a2 100644
--- a/compiler/rustc_llvm/build.rs
+++ b/compiler/rustc_llvm/build.rs
@@ -242,13 +242,6 @@ fn main() {
         println!("cargo:rustc-link-lib=uuid");
     } else if target.contains("netbsd") || target.contains("haiku") || target.contains("darwin") {
         println!("cargo:rustc-link-lib=z");
-    } else if target.starts_with("arm")
-        || target.starts_with("mips-")
-        || target.starts_with("mipsel-")
-        || target.starts_with("powerpc-")
-    {
-        // 32-bit targets need to link libatomic.
-        println!("cargo:rustc-link-lib=atomic");
     }
     cmd.args(&components);
 
@@ -343,14 +336,6 @@ fn main() {
         "stdc++"
     };
 
-    // RISC-V GCC erroneously requires libatomic for sub-word
-    // atomic operations. Some BSD uses Clang as its system
-    // compiler and provides no libatomic in its base system so
-    // does not want this.
-    if target.starts_with("riscv") && !target.contains("freebsd") && !target.contains("openbsd") {
-        println!("cargo:rustc-link-lib=atomic");
-    }
-
     // C++ runtime library
     if !target.contains("msvc") {
         if let Some(s) = llvm_static_stdcpp {
diff --git a/src/bootstrap/native.rs b/src/bootstrap/native.rs
index fc3bfaf1b..3d44ab8e9 100644
--- a/src/bootstrap/native.rs
+++ b/src/bootstrap/native.rs
@@ -432,19 +432,6 @@ impl Step for Llvm {
             cfg.define("LLVM_LINK_LLVM_DYLIB", "ON");
         }
 
-        if target.starts_with("riscv") && !target.contains("freebsd") && !target.contains("openbsd")
-        {
-            // RISC-V GCC erroneously requires linking against
-            // `libatomic` when using 1-byte and 2-byte C++
-            // atomics but the LLVM build system check cannot
-            // detect this. Therefore it is set manually here.
-            // Some BSD uses Clang as its system compiler and
-            // provides no libatomic in its base system so does
-            // not want this.
-            ldflags.exe.push(" -latomic");
-            ldflags.shared.push(" -latomic");
-        }
-
         if target.contains("msvc") {
             cfg.define("LLVM_USE_CRT_DEBUG", "MT");
             cfg.define("LLVM_USE_CRT_RELEASE", "MT");
-- 
2.38.1

