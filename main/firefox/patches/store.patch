https://bugzilla.mozilla.org/show_bug.cgi?id=1790526

diff --git a/toolkit/components/sessionstore/SessionStoreParent.cpp b/toolkit/components/sessionstore/SessionStoreParent.cpp
--- a/toolkit/components/sessionstore/SessionStoreParent.cpp
+++ b/toolkit/components/sessionstore/SessionStoreParent.cpp
@@ -197,30 +197,51 @@
 mozilla::ipc::IPCResult SessionStoreParent::RecvIncrementalSessionStoreUpdate(
     const MaybeDiscarded<BrowsingContext>& aBrowsingContext,
     const Maybe<FormData>& aFormData, const Maybe<nsPoint>& aScrollPosition,
     uint32_t aEpoch) {
   if (!aBrowsingContext.IsNull()) {
+    // The passed in BrowsingContext maybe already discarded and its mRawPtr is
+    // nullptr here. Let try to use the BrowsingContextId to get its
+    // Canonical one in the parent process for SessionStore update.
+    RefPtr<CanonicalBrowsingContext> bc;
+    if (aBrowsingContext.IsDiscarded()) {
+      bc = CanonicalBrowsingContext::Get(aBrowsingContext.ContextId());
+    } else {
+      bc = aBrowsingContext.GetMaybeDiscarded()->Canonical();
+    }
+    if (!bc) {
+      return IPC_OK();
+    }
     if (aFormData.isSome()) {
       mHasNewFormData = true;
     }
     if (aScrollPosition.isSome()) {
       mHasNewScrollPosition = true;
     }
 
-    mSessionStore->UpdateSessionStore(
-        aBrowsingContext.GetMaybeDiscarded()->Canonical(), aFormData,
-        aScrollPosition, aEpoch);
+    mSessionStore->UpdateSessionStore(bc, aFormData, aScrollPosition, aEpoch);
   }
 
   return IPC_OK();
 }
 
 mozilla::ipc::IPCResult SessionStoreParent::RecvResetSessionStore(
     const MaybeDiscarded<BrowsingContext>& aBrowsingContext, uint32_t aEpoch) {
   if (!aBrowsingContext.IsNull()) {
-    mSessionStore->RemoveSessionStore(
-        aBrowsingContext.GetMaybeDiscarded()->Canonical());
+    // The passed in BrowsingContext maybe already discarded and its mRawPtr is
+    // nullptr here. Let try to use the BrowsingContextId to get its
+    // Canonical one in the parent process for SessionStore update.
+    RefPtr<CanonicalBrowsingContext> bc;
+    if (aBrowsingContext.IsDiscarded()) {
+      bc = CanonicalBrowsingContext::Get(aBrowsingContext.ContextId());
+    } else {
+      bc = aBrowsingContext.GetMaybeDiscarded()->Canonical();
+    }
+    if (!bc) {
+      return IPC_OK();
+    }
+    mSessionStore->RemoveSessionStore(bc);
   }
   return IPC_OK();
 }
 
 void SessionStoreParent::SessionStoreUpdate(
