From f3895238f1cf5b0c280c037bf63c3d82b6d5a9f3 Mon Sep 17 00:00:00 2001
From: Daniel Kolesa <daniel@octaforge.org>
Date: Fri, 22 Oct 2021 05:07:48 +0200
Subject: [PATCH 5/6] general portability fixes for bsdutils and musl

---
 hook-functions | 45 +++++++++++++++++++--------------------------
 mkinitramfs    | 21 ++++-----------------
 2 files changed, 23 insertions(+), 43 deletions(-)

diff --git a/hook-functions b/hook-functions
index 4c06ff3..c59933b 100644
--- a/hook-functions
+++ b/hook-functions
@@ -170,6 +170,19 @@ _sanitize_target() {
 	printf "%s" "${target}"
 }
 
+_relpath() {
+    local pos="${1%%/}" ref="${2%%/}" down=''
+
+    while :; do
+        test "$pos" = '/' && break
+        case "$ref" in $pos/*) break;; esac
+        down="../$down"
+        pos=${pos%/*}
+    done
+
+    echo "$down${ref##$pos/}"
+}
+
 # $1 = file type (for logging)
 # $2 = file to copy to initramfs
 # $3 (optional) Name for the file on the initramfs
@@ -177,7 +190,7 @@ _sanitize_target() {
 # If the target exists, we leave it and return 1.
 # On any other error, we return >1.
 copy_file() {
-	local type src target link_target
+	local type src target link_target relp
 
 	type="${1}"
 	src="${2}"
@@ -213,7 +226,8 @@ copy_file() {
 
 			# Create a relative link so it always points
 			# to the right place
-			ln -rs "${DESTDIR}/${link_target}" "${DESTDIR}/${target}"
+			relp=$(_relpath "${DESTDIR}/${target}" "${DESTDIR}/${link_target}")
+			ln -sf "${relp}" "${DESTDIR}/${target}"
 		fi
 
 		# Copy the link target if it doesn't already exist
@@ -240,29 +254,7 @@ copy_exec() {
 	copy_file binary "${src}" "${target}" || return $(($? - 1))
 
 	# Copy the dependant libraries
-	for x in $(env --unset=LD_PRELOAD ldd "${src}" 2>/dev/null | sed -e '
-		/\//!d;
-		/linux-gate/d;
-		/=>/ {s/.*=>[[:blank:]]*\([^[:blank:]]*\).*/\1/};
-		s/[[:blank:]]*\([^[:blank:]]*\) (.*)/\1/' 2>/dev/null); do
-
-		# Try to use non-optimised libraries where possible.
-		# We assume that all HWCAP libraries will be in tls,
-		# sse2, vfp or neon.
-		nonoptlib=$(echo "${x}" | sed -e 's#/lib/\([^/]*/\)\?\(tls\|i686\|sse2\|neon\|vfp\).*/\(lib.*\)#/lib/\1\3#')
-		nonoptlib=$(echo "${nonoptlib}" | sed -e 's#-linux-gnu/\(tls\|i686\|sse2\|neon\|vfp\).*/\(lib.*\)#-linux-gnu/\2#')
-
-		if [ -e "${nonoptlib}" ]; then
-			x="${nonoptlib}"
-		fi
-
-		# Handle common dlopen() dependency (Debian bug #950254)
-		case "${x}" in
-		*/libpthread.so.*)
-			copy_libgcc "${x%/*}" || return
-			;;
-		esac
-
+	for x in $(env -u LD_PRELOAD ldd "${src}" 2>/dev/null | awk '{print $3}'); do
 		copy_file binary "${x}" || {
 			ret=$?
 			[ ${ret} = 1 ] || return $((ret - 1))
@@ -310,7 +302,8 @@ copy_modules_dir()
 	done
 
 	# shellcheck disable=SC2044
-	for kmod in $(find "${MODULESDIR}/${dir}" "$@" -name '*.ko*' -printf '%f\n'); do
+	for kmod in $(find "${MODULESDIR}/${dir}" "$@" -name '*.ko*'); do
+		kmod=$(basename "$kmod")
 		modules="$modules ${kmod%%.*}"
 	done
 	# shellcheck disable=SC2086
diff --git a/mkinitramfs b/mkinitramfs
index c63e5f5..daafedb 100755
--- a/mkinitramfs
+++ b/mkinitramfs
@@ -324,16 +324,16 @@ add_builtin_firmware
 cp -p /usr/share/initramfs-tools/init "${DESTDIR}/init"
 
 # add existant boot scripts
-for b in $(cd /usr/share/initramfs-tools/scripts/ && find . \
-	-regextype posix-extended -regex '.*/[[:alnum:]\._-]+$' -type f); do
+for b in $(cd /usr/share/initramfs-tools/scripts/ && find -E . \
+	-regex '.*/[[:alnum:]\._-]+$' -type f); do
 	[ -d "${DESTDIR}/scripts/$(dirname "${b}")" ] \
 		|| mkdir -p "${DESTDIR}/scripts/$(dirname "${b}")"
 	cp -p "/usr/share/initramfs-tools/scripts/${b}" \
 		"${DESTDIR}/scripts/$(dirname "${b}")/"
 done
 # Prune dot-files/directories and limit depth to exclude VCS files
-for b in $(cd "${CONFDIR}/scripts" && find . -maxdepth 2 -name '.?*' -prune -o \
-	-regextype posix-extended -regex '.*/[[:alnum:]\._-]+$' -type f -print); do
+for b in $(cd "${CONFDIR}/scripts" && find -E . -maxdepth 2 -name '.?*' -prune -o \
+	-regex '.*/[[:alnum:]\._-]+$' -type f -print); do
 	[ -d "${DESTDIR}/scripts/$(dirname "${b}")" ] \
 		|| mkdir -p "${DESTDIR}/scripts/$(dirname "${b}")"
 	cp -p "${CONFDIR}/scripts/${b}" "${DESTDIR}/scripts/$(dirname "${b}")/"
@@ -381,19 +381,6 @@ done
 depmod -a -b "${DESTDIR}" "${version}"
 rm -f "${DESTDIR}/lib/modules/${version}"/modules.*map
 
-# make sure that library search path is up to date
-cp -pPr /etc/ld.so.conf* "$DESTDIR"/etc/
-if ! ldconfig -r "$DESTDIR" ; then
-	[ "$(id -u)" != "0" ] \
-	&& echo "ldconfig might need uid=0 (root) for chroot()" >&2
-fi
-# The auxiliary cache is not reproducible and is always invalid at boot
-# (see #845034)
-if [ -d "${DESTDIR}"/var/cache/ldconfig ]; then
-	rm -f "${DESTDIR}"/var/cache/ldconfig/aux-cache
-	rmdir --ignore-fail-on-non-empty "${DESTDIR}"/var/cache/ldconfig
-fi
-
 # Apply DSDT to initramfs
 if [ -e "${CONFDIR}/DSDT.aml" ]; then
 	copy_file DSDT "${CONFDIR}/DSDT.aml"
-- 
2.33.0

