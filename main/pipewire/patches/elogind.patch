fix for https://gitlab.freedesktop.org/pipewire/pipewire/-/issues/3960 without systemd
--
--- a/spa/plugins/v4l2/meson.build
+++ b/spa/plugins/v4l2/meson.build
@@ -3,11 +3,13 @@
                 'v4l2-source.c']
 v4l2_dependencies = [ spa_dep, libinotify_dep ]
 
+elogind_dep = dependency('libelogind')
+
 if libudev_dep.found()
   v4l2_sources += [ 'v4l2-udev.c' ]
   v4l2_dependencies += [ libudev_dep ]
-  if systemd_dep.found()
-    v4l2_dependencies += [ systemd_dep ]
+  if elogind_dep.found()
+    v4l2_dependencies += [ elogind_dep ]
   endif
 endif
 
--- a/spa/plugins/v4l2/v4l2-udev.c
+++ b/spa/plugins/v4l2/v4l2-udev.c
@@ -27,9 +27,7 @@
 #include "config.h"
 #include "v4l2.h"
 
-#ifdef HAVE_SYSTEMD
 #include <systemd/sd-login.h>
-#endif
 
 #define MAX_DEVICES	64
 
@@ -66,10 +64,8 @@
 
 	struct spa_source source;
 	struct spa_source notify;
-#ifdef HAVE_SYSTEMD
 	struct spa_source logind;
 	sd_login_monitor *logind_monitor;
-#endif
 };
 
 static int impl_udev_open(struct impl *this)
@@ -472,11 +468,9 @@
 {
 	int notify_fd;
 
-#ifdef HAVE_SYSTEMD
 	/* Do not use inotify when using logind session monitoring */
 	if (this->logind_monitor)
 		return 0;
-#endif
 
 	if (this->notify.fd != -1)
 		return 0;
@@ -495,7 +489,7 @@
 	return 0;
 }
 
-#ifdef HAVE_SYSTEMD
+#if 1
 static void impl_on_logind_events(struct spa_source *source)
 {
 	struct impl *this = source->data;
@@ -769,9 +763,7 @@
 
 	this = (struct impl *) handle;
 	this->notify.fd = -1;
-#ifdef HAVE_SYSTEMD
 	this->logind_monitor = NULL;
-#endif
 
 	this->log = spa_support_find(support, n_support, SPA_TYPE_INTERFACE_Log);
 	this->main_loop = spa_support_find(support, n_support, SPA_TYPE_INTERFACE_Loop);
