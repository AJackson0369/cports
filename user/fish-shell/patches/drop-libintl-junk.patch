diff --git a/build.rs b/build.rs
index 6d6bdff..8592ff1 100644
--- a/build.rs
+++ b/build.rs
@@ -165,7 +165,7 @@ fn have_gettext(target: &Target) -> Result<bool, Box<dyn Error>> {
     // symbol _nl_msg_cat_cntr, we cannot use gettext even if we find it.
     let mut libraries = Vec::new();
     let mut found = 0;
-    let symbols = ["gettext", "_nl_msg_cat_cntr"];
+    let symbols = ["gettext"];
     for symbol in &symbols {
         // Historically, libintl was required in order to use gettext() and co, but that
         // functionality was subsumed by some versions of libc.
@@ -184,7 +184,6 @@ fn have_gettext(target: &Target) -> Result<bool, Box<dyn Error>> {
     }
     match found {
         0 => Ok(false),
-        1 => Err(format!("gettext found but cannot be used without {}", symbols[1]).into()),
         _ => {
             rsconf::link_libraries(&libraries, LinkType::Default);
             Ok(true)
diff --git a/src/env_dispatch.rs b/src/env_dispatch.rs
index c495edb..2e1f371 100644
--- a/src/env_dispatch.rs
+++ b/src/env_dispatch.rs
@@ -689,19 +689,6 @@ fn init_locale(vars: &EnvStack) {
         "New LC_MESSAGES locale:",
         new_msg_locale.to_string_lossy()
     );
-
-    #[cfg(gettext)]
-    {
-        if old_msg_locale.as_c_str() != new_msg_locale {
-            // Make change known to GNU gettext.
-            extern "C" {
-                static mut _nl_msg_cat_cntr: libc::c_int;
-            }
-            unsafe {
-                _nl_msg_cat_cntr += 1;
-            }
-        }
-    }
 }
 
 pub fn use_posix_spawn() -> bool {
